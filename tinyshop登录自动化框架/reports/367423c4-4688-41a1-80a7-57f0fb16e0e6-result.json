{"name": "test_login[1956053672@qq.com-123123-True]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff74fd8cda5+78885]\n\tGetHandleVerifier [0x0x7ff74fd8ce00+78976]\n\t(No symbol) [0x0x7ff74fb49bca]\n\t(No symbol) [0x0x7ff74fba0766]\n\t(No symbol) [0x0x7ff74fba0a1c]\n\t(No symbol) [0x0x7ff74fbf4467]\n\t(No symbol) [0x0x7ff74fbc8bcf]\n\t(No symbol) [0x0x7ff74fbf122f]\n\t(No symbol) [0x0x7ff74fbc8963]\n\t(No symbol) [0x0x7ff74fb916b1]\n\t(No symbol) [0x0x7ff74fb92443]\n\tGetHandleVerifier [0x0x7ff750064eed+3061101]\n\tGetHandleVerifier [0x0x7ff75005f33d+3037629]\n\tGetHandleVerifier [0x0x7ff75007e592+3165202]\n\tGetHandleVerifier [0x0x7ff74fda730e+186766]\n\tGetHandleVerifier [0x0x7ff74fdaeb3f+217535]\n\tGetHandleVerifier [0x0x7ff74fd959b4+114740]\n\tGetHandleVerifier [0x0x7ff74fd95b69+115177]\n\tGetHandleVerifier [0x0x7ff74fd7c368+10728]\n\tBaseThreadInitThunk [0x0x7ffe7a7553e0+16]\n\tRtlUserThreadStart [0x0x7ffe7b70485b+43]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6c38f2370458dea11775cd89643d4e2b\")>\naccount = '1956053672@qq.com', password = '123123', should_pass = True\n\n    @pytest.mark.parametrize(\"account,password,should_pass\", valid_cases)\n    def test_login(driver, account, password, should_pass):\n        \"\"\"\n        登录功能自动化测试\n        :param driver: 浏览器驱动\n        :param account: 测试账号\n        :param password: 测试密码\n        :param should_pass: 是否应登录成功\n        \"\"\"\n        login = LoginPage(driver)\n        user_center = UserCenterPage(driver)\n        login.open(LOGIN_URL)\n        login.input_account(account)\n        login.input_password(password)\n        login.click_login()\n        if should_pass:\n            # 登录成功后进入会员中心并校验账号\n>           user_center.goto_user_center()\n\ntestcases\\test_login.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\user_center_page.py:13: in goto_user_center\n    wait_for_element(self.driver, By.LINK_TEXT, \"会员中心\").click()\nutils\\helper.py:14: in wait_for_element\n    return WebDriverWait(driver, timeout).until(EC.presence_of_element_located((by, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6c38f2370458dea11775cd89643d4e2b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000199A273B550>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff74fd8cda5+78885]\nE       \tGetHandleVerifier [0x0x7ff74fd8ce00+78976]\nE       \t(No symbol) [0x0x7ff74fb49bca]\nE       \t(No symbol) [0x0x7ff74fba0766]\nE       \t(No symbol) [0x0x7ff74fba0a1c]\nE       \t(No symbol) [0x0x7ff74fbf4467]\nE       \t(No symbol) [0x0x7ff74fbc8bcf]\nE       \t(No symbol) [0x0x7ff74fbf122f]\nE       \t(No symbol) [0x0x7ff74fbc8963]\nE       \t(No symbol) [0x0x7ff74fb916b1]\nE       \t(No symbol) [0x0x7ff74fb92443]\nE       \tGetHandleVerifier [0x0x7ff750064eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff75005f33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff75007e592+3165202]\nE       \tGetHandleVerifier [0x0x7ff74fda730e+186766]\nE       \tGetHandleVerifier [0x0x7ff74fdaeb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff74fd959b4+114740]\nE       \tGetHandleVerifier [0x0x7ff74fd95b69+115177]\nE       \tGetHandleVerifier [0x0x7ff74fd7c368+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe7a7553e0+16]\nE       \tRtlUserThreadStart [0x0x7ffe7b70485b+43]\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "\n    登录功能自动化测试\n    :param driver: 浏览器驱动\n    :param account: 测试账号\n    :param password: 测试密码\n    :param should_pass: 是否应登录成功\n    ", "parameters": [{"name": "account", "value": "'1956053672@qq.com'"}, {"name": "password", "value": "'123123'"}, {"name": "should_pass", "value": "True"}], "start": 1751454314777, "stop": 1751454325675, "uuid": "e3b276d7-827d-499a-aa04-fe728df46283", "historyId": "3cf058100e384149ac7128eab91b56bb", "testCaseId": "69c09a16f23890ca557733ad87499d37", "fullName": "testcases.test_login#test_login", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-CGD749C"}, {"name": "thread", "value": "22664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}